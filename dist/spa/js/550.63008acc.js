"use strict";(globalThis["webpackChunktravel_rover_vue_frontend"]=globalThis["webpackChunktravel_rover_vue_frontend"]||[]).push([[550],{4550:(e,t,a)=>{a.r(t),a.d(t,{default:()=>h});var r=a(9835);const n={class:"row"},i={class:"col-12 q-pa-sm",style:{"background-color":"#4B5563"}};function o(e,t,a,o,s,l){const c=(0,r.up)("ItineraryPreview"),d=(0,r.up)("q-scroll-area");return(0,r.wg)(),(0,r.iD)("div",n,[(0,r._)("div",i,[(0,r.Wm)(d,{style:{height:"100vh",margin:"0 auto","max-width":"1200px"}},{default:(0,r.w5)((()=>[(0,r.Wm)(c,{class:"q-pa-md",id:"preview"})])),_:1})])])}var s=a(7110),l=a(7449);a(6827);const c={name:"ItineraryPreviewOpenToInternet",components:{ItineraryPreview:s["default"]},mounted(){try{window.location.href;var e=window.location.href.split("?")[1],t=new URLSearchParams(e),a=t.get("pk");(0,l.JG)({itinerary_pk:a}).then((e=>{if(200==e["data"]["status"]){let t=JSON.parse(e["data"]["itinerary_preview"]);this.$store.commit("itinerary_preview_update",t)}else alert("There is some internal issues going on.")})).catch((e=>{alert(a),alert(e)}))}catch(r){console.log(r)}},computed:{itinarary_data:function(){return console.log(this.$store.state.itinerary_preview),this.$store.state.itinerary_preview},nonEmptyImagesCountPlacesToVisit(){return console.log(this.itinarary_data["place_name"]),this.itinarary_data.places_to_visit_img[0].images.filter((e=>""!==e)).length},nonEmptyImagesCountAccomodationArrangement(){return this.itinarary_data.accomodation_arrangements_img[0].images.filter((e=>""!==e)).length}}};var d=a(1639),m=a(6663),p=a(9984),u=a.n(p);const _=(0,d.Z)(c,[["render",o],["__scopeId","data-v-4e84dc8c"]]),h=_;u()(c,"components",{QScrollArea:m.Z})}}]);